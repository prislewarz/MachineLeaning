import numpy as np
import qiskit
from qiskit.providers.aer import QasmSimulator
from qiskit import QuantumRegister, ClassicalRegister
from qiskit import QuantumCircuit,transpile
from qiskit.visualization import plot_histogram
from math import pi

```python
qc = QuantumCircuit(2,2)
# encode inputs in qubits 0 and 1
qc.h(0) 
qc.h(1) 
qc.cz(0,1)
qc.measure(1,0) # 두번째 큐빗을 첫번째 측정장소에 저장
qc.measure(0,1) # 첫번째 큐빗을 두번째 측정장소에 저장
qc.save_statevector()   # Tell simulator to save statevector
qc.draw()

simulator = QasmSimulator()
compiled_circuit = transpile(qc, simulator)


# Execute the circuit on the qasm simulator
job = simulator.run(compiled_circuit, shots=1000)
# Grab results from the job
result = job.result()
out_state = result.get_statevector()
print(out_state) # Display the output state vector

# Returns counts
counts = result.get_counts(compiled_circuit)
plot_histogram(counts)
```
