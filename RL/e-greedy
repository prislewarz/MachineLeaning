import gym
import gym_bandits
import numpy as np

env = gym.make('MultiarmedBandits-v0', nr_arm=2)
count = np.zeros(2)
sum_rewards = np.zeros(2)
Q = np.zeros(2)
num_rounds = 100

def epsilon_greedy(epsilon):
  if np.random,uniform(0,1) < epsilon:
    return env.action_space.sample()
  else:
    return np.argmax(Q)
    
  for i in range(num_rounds):
    env.reset()
    arm = epsilon_greedy(i)
    next_state, reward, done, info = env.step(arm)
    count[arm] += 1
    sum_rewards[arm] += reward
    Q[arm] = sum_rewards[arm] / count[arm]
    print('The optimal arm is arm {}'.format(np.argmax(Q)+1))
